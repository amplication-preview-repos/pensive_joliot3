/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Formula as PrismaFormula } from "@prisma/client";

export class FormulaServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.FormulaCountArgs, "select">): Promise<number> {
    return this.prisma.formula.count(args);
  }

  async formulas(args: Prisma.FormulaFindManyArgs): Promise<PrismaFormula[]> {
    return this.prisma.formula.findMany(args);
  }
  async formula(
    args: Prisma.FormulaFindUniqueArgs
  ): Promise<PrismaFormula | null> {
    return this.prisma.formula.findUnique(args);
  }
  async createFormula(args: Prisma.FormulaCreateArgs): Promise<PrismaFormula> {
    return this.prisma.formula.create(args);
  }
  async updateFormula(args: Prisma.FormulaUpdateArgs): Promise<PrismaFormula> {
    return this.prisma.formula.update(args);
  }
  async deleteFormula(args: Prisma.FormulaDeleteArgs): Promise<PrismaFormula> {
    return this.prisma.formula.delete(args);
  }
}
