/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Consultoria as PrismaConsultoria } from "@prisma/client";

export class ConsultoriaServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.ConsultoriaCountArgs, "select">
  ): Promise<number> {
    return this.prisma.consultoria.count(args);
  }

  async consultorias(
    args: Prisma.ConsultoriaFindManyArgs
  ): Promise<PrismaConsultoria[]> {
    return this.prisma.consultoria.findMany(args);
  }
  async consultoria(
    args: Prisma.ConsultoriaFindUniqueArgs
  ): Promise<PrismaConsultoria | null> {
    return this.prisma.consultoria.findUnique(args);
  }
  async createConsultoria(
    args: Prisma.ConsultoriaCreateArgs
  ): Promise<PrismaConsultoria> {
    return this.prisma.consultoria.create(args);
  }
  async updateConsultoria(
    args: Prisma.ConsultoriaUpdateArgs
  ): Promise<PrismaConsultoria> {
    return this.prisma.consultoria.update(args);
  }
  async deleteConsultoria(
    args: Prisma.ConsultoriaDeleteArgs
  ): Promise<PrismaConsultoria> {
    return this.prisma.consultoria.delete(args);
  }
}
