/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  DocumentacionTecnica as PrismaDocumentacionTecnica,
} from "@prisma/client";

export class DocumentacionTecnicaServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.DocumentacionTecnicaCountArgs, "select">
  ): Promise<number> {
    return this.prisma.documentacionTecnica.count(args);
  }

  async documentacionTecnicas(
    args: Prisma.DocumentacionTecnicaFindManyArgs
  ): Promise<PrismaDocumentacionTecnica[]> {
    return this.prisma.documentacionTecnica.findMany(args);
  }
  async documentacionTecnica(
    args: Prisma.DocumentacionTecnicaFindUniqueArgs
  ): Promise<PrismaDocumentacionTecnica | null> {
    return this.prisma.documentacionTecnica.findUnique(args);
  }
  async createDocumentacionTecnica(
    args: Prisma.DocumentacionTecnicaCreateArgs
  ): Promise<PrismaDocumentacionTecnica> {
    return this.prisma.documentacionTecnica.create(args);
  }
  async updateDocumentacionTecnica(
    args: Prisma.DocumentacionTecnicaUpdateArgs
  ): Promise<PrismaDocumentacionTecnica> {
    return this.prisma.documentacionTecnica.update(args);
  }
  async deleteDocumentacionTecnica(
    args: Prisma.DocumentacionTecnicaDeleteArgs
  ): Promise<PrismaDocumentacionTecnica> {
    return this.prisma.documentacionTecnica.delete(args);
  }
}
